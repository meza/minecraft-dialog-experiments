name: build
on: push

permissions:
  issues: write
  checks: write
  contents: write
  pull-requests: write

env:
  TYPE: ${{ endsWith(github.ref_name, 'main') && 'release' || (endsWith(github.ref_name, 'beta') && 'beta' || 'dev') }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: "⬇️ Checkout"
        uses: actions/checkout@v4

      - name: "☕ Setup Jdk 21"
        uses: actions/setup-java@v4
        with:
          cache: 'gradle'
          cache-dependency-path: |
            versions/*.properties
            *.properties
            *.gradle.kts
          java-version: 21
          check-latest: true
          distribution: 'temurin'

      - name: "🛂 Setup Gradle"
        uses: gradle/actions/setup-gradle@v4
        with:
          validate-wrappers: true

      - name: "🔓 Adjust the release permissions"
        run: chmod a+x ./scripts/release.sh && chmod +x ./gradlew

      - name: "🔎 Determine version"
        id: get-next-version
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        uses: cycjimmy/semantic-release-action@v4
        with:
          dry_run: true
          extra_plugins: |
            @semantic-release/changelog
            @semantic-release/exec
            conventional-changelog-conventionalcommits 
            semantic-release-discord-notifier 

      - name: "ℹ️ Needs Release?"
        run: echo "Needs release published? ${{ steps.get-next-version.outputs.new_release_published == 'true' }}"

      - name: "🔨 Data Gen"
        run: |
          chmod +x ./scripts/datagen.sh
          ./scripts/datagen.sh

      - name: "🏗️ Build, Test & Release"
        if: ${{ steps.get-next-version.outputs.new_release_published == 'true' }}
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          DO_PUBLISH: steps.get-next-version.outputs.new_release_published
          MODRINTH_ID: ${{ vars.MODRINTH_ID }}
          MODRINTH_TOKEN: ${{ secrets.MODRINTH_TOKEN }}
          CURSEFORGE_ID: ${{ vars.CURSEFORGE_ID }}
          CURSEFORGE_TOKEN: ${{ secrets.CURSEFORGE_TOKEN }}
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        uses: cycjimmy/semantic-release-action@v4
        with:
          dry_run: true
          extra_plugins: |
            @semantic-release/changelog
            @semantic-release/exec
            conventional-changelog-conventionalcommits 
            semantic-release-discord-notifier   

      - name: "🧪 Run Dev Build"
        if: ${{ steps.get-next-version.outputs.new_release_published != 'true' }}
        run: ./gradlew chiseledGameTest chiseledBuildAndCollect --stacktrace

      - name: "🕵️‍♂️ Collect jars"
        uses: actions/upload-artifact@v4
        with:
          name: Artifacts
          path: |
            build/libs/*.jar
            build/reports/**/*

